/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */
html {
  line-height: 1.15;
  -webkit-text-size-adjust: 100%
}
body {
  margin: 0
}
main {
  display: block
}
h1 {
  font-size: 2em;
  margin: .67em 0
}
hr {
  box-sizing: content-box;
  height: 0;
  overflow: visible
}
pre {
  font: 1em monospace,monospace
}
a {
  background: 0 0
}
abbr[title] {
  border-bottom: none;
  text-decoration: underline;
  -webkit-text-decoration: underline dotted;
  text-decoration: underline dotted
}
b,
strong {
  font-weight: bolder
}
code,
kbd,
samp {
  font: 1em monospace,monospace
}
small {
  font-size: 80%
}
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline
}
sub {
  bottom: -.25em
}
sup {
  top: -.5em
}
img {
  border-style: none
}
button,
input,
optgroup,
select,
textarea {
  font: 100%/1.15 inherit;
  margin: 0
}
button,
input {
  overflow: visible
}
button,
select {
  text-transform: none
}
[type=button],
[type=reset],
[type=submit],
button {
  -webkit-appearance: button
}
[type=button]::-moz-focus-inner,
[type=reset]::-moz-focus-inner,
[type=submit]::-moz-focus-inner,
button::-moz-focus-inner {
  border-style: none;
  padding: 0
}
[type=button]:-moz-focusring,
[type=reset]:-moz-focusring,
[type=submit]:-moz-focusring,
button:-moz-focusring {
  outline: 1px dotted ButtonText
}
fieldset {
  padding: .35em .75em .625em
}
legend {
  box-sizing: border-box;
  color: inherit;
  display: table;
  max-width: 100%;
  padding: 0;
  white-space: normal
}
progress {
  vertical-align: baseline
}
textarea {
  overflow: auto
}
[type=checkbox],
[type=radio] {
  box-sizing: border-box;
  padding: 0
}
[type=number]::-webkit-inner-spin-button,
[type=number]::-webkit-outer-spin-button {
  height: auto
}
[type=search] {
  -webkit-appearance: textfield;
  outline-offset: -2px
}
[type=search]::-webkit-search-decoration {
  -webkit-appearance: none
}
::-webkit-file-upload-button {
  -webkit-appearance: button;
  font: inherit
}
details {
  display: block
}
summary {
  display: list-item
}
template {
  display: none
}
[hidden] {
  display: none
}
*,
::after,
::before {
  box-sizing: inherit
}
html {
  box-sizing: border-box
}
body {
  background: #f5f5fa;
  margin: 0;
  position: relative;
  min-height: 100vh;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  width: 100%;
  font-family: "Tele2 TextSans Web SHORT",Arial,sans-serif
}
img {
  max-width: 100%
}
a {
  text-decoration: none
}
.main {
  padding-top: 40px;
  padding-left: 40px;
  -webkit-transition: all .5s ease;
  transition: all .5s ease
}
.main.opened-sidebar {
  padding-left: 190px
}
@font-face {
  font-family: Stencil;
  src: url(../fonts/StandardStencil-Bold.woff2) format("woff2"),url(../fonts/StandardStencil-Bold.woff) format("woff");
  font-weight: 700;
  font-style: normal;
  font-display: swap
}
@font-face {
  font-family: "Tele2 TextSans";
  src: url(../fonts/tele2_textsans-regular.woff2) format("woff2"),url(../fonts/tele2_textsans-regular.woff) format("woff");
  font-weight: 400;
  font-style: normal;
  font-display: swap
}
@font-face {
  font-family: "Tele2 TextSans";
  src: url(../fonts/tele2_textsans-bold.woff2) format("woff2"),url(../fonts/tele2_textsans-bold.woff) format("woff");
  font-weight: 700;
  font-style: normal;
  font-display: swap
}
@font-face {
  font-family: "Tele2 DisplaySerif";
  src: url(../fonts/Tele2DisplaySerif-Bold.woff2) format("woff2"),url(../fonts/Tele2DisplaySerif-Bold.woff) format("woff");
  font-weight: 700;
  font-style: normal;
  font-display: swap
}
@font-face {
  font-family: "Tele2 DisplaySerif";
  src: url(../fonts/Tele2DisplaySerif-Regular.woff2) format("woff2"),url(../fonts/Tele2DisplaySerif-Regular.woff) format("woff");
  font-weight: 400;
  font-style: normal;
  font-display: swap
}
@font-face {
  font-family: "Tele2 TextSans Web SHORT";
  src: url(../fonts/Tele2TextSans-Bold-shortWeb.woff2) format("woff2"),url(../fonts/Tele2TextSans-Bold-shortWeb.woff) format("woff");
  font-weight: 700;
  font-style: normal;
  font-display: swap
}
@font-face {
  font-family: "Tele2 TextSans Web SHORT";
  src: url(../fonts/Tele2TextSans-Regular-shortWeb.woff2) format("woff2"),url(../fonts/Tele2TextSans-Regular-shortWeb.woff) format("woff");
  font-weight: 400;
  font-style: normal;
  font-display: swap
}
.sidebar {
  position: fixed;
  display: -webkit-box;
  display: flex;
  height: 100vh;
  z-index: 5
}
.sidebar.opened .sidebar-static__logo {
  opacity: 0
}
.sidebar.opened .sidebar-additional {
  -webkit-transform: none;
  transform: none
}
.sidebar-static {
  width: 40px;
  background: #8f9399;
  flex-shrink: 0;
  padding-top: 5px;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  -webkit-box-align: center;
  align-items: center;
  z-index: 6
}
.sidebar-static__logo {
  margin-bottom: 25px;
  -webkit-transition: opacity .5s ease;
  transition: opacity .5s ease
}
.main-item {
  width: 18px;
  height: 18px;
  margin-bottom: 13px;
  cursor: pointer;
  opacity: .7
}
.main-item:hover {
  opacity: 1
}
.sidebar-additional {
  width: 150px;
  background: #e8e8ed;
  display: -webkit-box;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  flex-direction: column;
  padding-top: 6px;
  -webkit-transition: .5s all ease;
  transition: .5s all ease;
  -webkit-transform: translateX(-100%);
  transform: translateX(-100%);
  position: absolute;
  left: 40px;
  height: 100%;
  border-right: 1px solid #d1d8d6
}
.logo {
  display: block;
  align-self: center;
  margin-bottom: 21px
}
.nested-menu-items {
  width: 100%;
  padding-left: 16px;
  margin: 0;
  list-style: none
}
.menu-item-with-nested.opened {
  color: #c4c4c4
}
.menu-item-with-nested + .nested-menu-items {
  -webkit-transform: scaleY(0);
  transform: scaleY(0);
  -webkit-transform-origin: top;
  transform-origin: top;
  overflow: hidden;
  -webkit-transition: all .5s ease;
  transition: all .5s ease;
  clip: rect(auto,auto,0,auto)
}
.menu-item-with-nested + .nested-menu-items.opened {
  -webkit-transform: scaleY(1);
  transform: scaleY(1)
}
.menu-item {
  margin: 0;
  font-style: normal;
  font-weight: 400;
  font-size: 12px;
  color: #8f9399;
  display: block;
  width: 100%
}
.menu-item:hover {
  color: #c4c4c4
}
.menu-item a {
  padding: 7px 5px 7px 0;
  font-style: normal;
  font-weight: 400;
  font-size: 12px;
  color: #8f9399;
  display: block;
  width: 100%
}
.menu-item a:hover {
  color: #c4c4c4
}
.menu-item a.router-link-active {
  color: #c4c4c4
}
.menu-items-title {
  background: #f9f8f9;
  display: block;
  font-style: normal;
  font-weight: 400;
  font-size: 12px;
  padding: 7px 8px;
  margin: 0;
  color: #c4c4c4
}
.menu-item a.active {
  color: #c4c4c4
}
.header {
  background: #f0f1f2;
  min-height: 40px;
  padding-right: 29px;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  padding-bottom: 4px;
  padding-left: 40px;
  -webkit-transition: all .5s ease;
  transition: all .5s ease
}
.header.opened-sidebar {
  padding-left: 190px
}
.header h2 {
  font: bold 19px "Tele2 DisplaySerif","Times New Roman",serif;
  color: #1f2229;
  margin: 0 0 0 20px
}
.header__menu {
  margin-left: auto;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  align-self: stretch
}
.header__menu a {
  color: #80858b;
  margin-left: 23px;
  font: 12px "Tele2 TextSans Web SHORT",Arial,sans-serif;
  font-style: normal;
  font-weight: 400;
  font-size: 13px;
  line-height: 20px
}
.pade-settings-button {
  background: 0 0;
  border: none;
  margin-top: 5px;
  margin-left: 9px;
  padding: 0;
  cursor: pointer
}
.dropdown {
  position: relative
}
.dropdown__btn a {
  padding-right: 22px;
  display: -webkit-box;
  display: flex;
  flex-wrap: nowrap;
  -webkit-box-align: center;
  align-items: center
}
.dropdown__btn a::after {
  content: "";
  position: absolute;
  width: 13px;
  height: 8px;
  top: 7px;
  right: 7px;
  background: url(/img/shape-grey.svg) no-repeat;
  -webkit-transform: rotate(180deg);
  transform: rotate(180deg);
  -webkit-transition: -webkit-transform .4s ease;
  transition: -webkit-transform .4s ease;
  transition: transform .4s ease;
  transition: transform .4s ease,-webkit-transform .4s ease
}
.dropdown.closed .dropdown__btn a::after {
  -webkit-transform: none;
  transform: none
}
.dropdown__content {
  position: absolute;
  border: 0 solid #1f2229;
  top: 31px;
  left: 23px;
  background: #fff;
  width: 100%;
  overflow: hidden;
  height: 0;
  z-index: 3
}
.dropdown__list {
  margin: 0;
  padding: 0;
  counter-reset: myCounter
}
.dropdown__item {
  list-style: none;
  display: -webkit-box;
  display: flex;
  -webkit-box-align: center;
  align-items: center;
  position: relative
}
.dropdown__item a {
  display: block;
  width: 100%;
  margin: 0;
  color: #1f2229;
  padding: 7px 0 7px 25px
}
.dropdown__item a:hover {
  background: #3fcbff
}
.dropdown__item::before {
  counter-increment: myCounter;
  content: counter(myCounter) ".";
  color: #1f2229;
  font-size: 12px;
  position: absolute;
  top: 50%;
  -webkit-transform: translateY(-50%);
  transform: translateY(-50%);
  left: 10px
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
